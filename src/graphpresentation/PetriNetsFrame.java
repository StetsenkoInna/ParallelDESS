/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package graphpresentation;

import PetriObj.*;
import graphnet.GraphPetriNet;
import graphnet.GraphPetriPlace;
import graphnet.GraphPetriTransition;
import graphreuse.GraphReUseFrame;

import javax.swing.*;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Ольга
 */
public class PetriNetsFrame extends javax.swing.JFrame {

    /**
     * Creates new form PetriNetsFrame
     */
    public PetriNetsFrame() {
        initComponents();
        petriNetsPanel = new PetriNetsPanel(netNameTextField);
        petriNetPanelScrollPane.setViewportView(petriNetsPanel);

        this.setLocation(50, 50);

        this.setExtendedState(JFrame.MAXIMIZED_BOTH / 2);
        this.setTitle("Stochastic Petri Net Simulator");
        this.setSize(1000, 700);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        petriNetDesign = new javax.swing.JPanel();
        petriNetsFrameToolBar = new javax.swing.JToolBar();
        newPlaceButton = new javax.swing.JButton();
        newTransitionButton = new javax.swing.JButton();
        newTieButton = new javax.swing.JButton();
        petriNetsFrameSplitPane = new javax.swing.JSplitPane();
        petriNetPanelScrollPane = new javax.swing.JScrollPane();
        modelingResultsPanel = new javax.swing.JPanel();
        modelingResultsSplitPane = new javax.swing.JSplitPane();
        protokolScrollPane = new javax.swing.JScrollPane();
        protokolTextArea = new javax.swing.JTextArea();
        statisticsScrollPane = new javax.swing.JScrollPane();
        statisticsTextArea = new javax.swing.JTextArea();
        modelingParametersPanel = new javax.swing.JPanel();
        netNameLabel = new javax.swing.JLabel();
        netNameTextField = new javax.swing.JTextField();
        timeStartLabel = new javax.swing.JLabel();
        timeStartField = new javax.swing.JTextField();
        timeModelingLabel = new javax.swing.JLabel();
        timeModelingTextField = new javax.swing.JTextField();
        petriNetDesign1 = new javax.swing.JPanel();
        petriNetsFrameToolBar1 = new javax.swing.JToolBar();
        newPlaceButton1 = new javax.swing.JButton();
        newTransitionButton1 = new javax.swing.JButton();
        newTieButton1 = new javax.swing.JButton();
        runPetriNetButton1 = new javax.swing.JButton();
        runEventButton1 = new javax.swing.JButton();
        petriNetsFrameSplitPane1 = new javax.swing.JSplitPane();
        petriNetPanelScrollPane1 = new javax.swing.JScrollPane();
        modelingResultsPanel1 = new javax.swing.JPanel();
        modelingResultsSplitPane1 = new javax.swing.JSplitPane();
        protokolScrollPane1 = new javax.swing.JScrollPane();
        protokolTextArea1 = new javax.swing.JTextArea();
        statisticsScrollPane1 = new javax.swing.JScrollPane();
        statisticsTextArea1 = new javax.swing.JTextArea();
        modelingParametersPanel1 = new javax.swing.JPanel();
        netNameLabel1 = new javax.swing.JLabel();
        netNameTextField1 = new javax.swing.JTextField();
        timeStartLabel1 = new javax.swing.JLabel();
        timeStartField1 = new javax.swing.JTextField();
        timeModelingLabel1 = new javax.swing.JLabel();
        timeModelingTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        petriNetDesign2 = new javax.swing.JPanel();
        petriNetsFrameToolBar2 = new javax.swing.JToolBar();
        newPlaceButton2 = new javax.swing.JButton();
        newTransitionButton2 = new javax.swing.JButton();
        newTieButton2 = new javax.swing.JButton();
        runPetriNetButton2 = new javax.swing.JButton();
        runEventButton2 = new javax.swing.JButton();
        petriNetsFrameSplitPane2 = new javax.swing.JSplitPane();
        petriNetPanelScrollPane2 = new javax.swing.JScrollPane();
        modelingResultsPanel2 = new javax.swing.JPanel();
        modelingResultsSplitPane2 = new javax.swing.JSplitPane();
        protokolScrollPane2 = new javax.swing.JScrollPane();
        protokolTextArea2 = new javax.swing.JTextArea();
        statisticsScrollPane2 = new javax.swing.JScrollPane();
        statisticsTextArea2 = new javax.swing.JTextArea();
        modelingParametersPanel2 = new javax.swing.JPanel();
        netNameLabel2 = new javax.swing.JLabel();
        netNameTextField2 = new javax.swing.JTextField();
        timeStartLabel2 = new javax.swing.JLabel();
        timeStartField2 = new javax.swing.JTextField();
        timeModelingLabel2 = new javax.swing.JLabel();
        timeModelingTextField2 = new javax.swing.JTextField();
        petriNetsFrameMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        newMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        editNetParameters = new javax.swing.JMenuItem();
        Save = new javax.swing.JMenu();
        SaveGraphNet = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        SavePetriNetAs = new javax.swing.JMenuItem();
        SaveNetAsMethod = new javax.swing.JMenuItem();
        SaveMethodInNetLibrary = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        itemRunNet = new javax.swing.JMenuItem();
        itemRunEvent = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTabbedPane1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        petriNetsFrameToolBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        petriNetsFrameToolBar.setRollover(true);
        petriNetsFrameToolBar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        petriNetsFrameToolBar.setMargin(new java.awt.Insets(0, 10, 0, 10));

        newPlaceButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newPlaceButton.setText("Place");
        newPlaceButton.setToolTipText("");
        newPlaceButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10));
        newPlaceButton.setFocusable(false);
        newPlaceButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newPlaceButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newPlaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPlaceButtonActionPerformed(evt);
            }
        });
        petriNetsFrameToolBar.add(newPlaceButton);

        newTransitionButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newTransitionButton.setText("Transition");
        newTransitionButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10));
        newTransitionButton.setFocusable(false);
        newTransitionButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newTransitionButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newTransitionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTransitionButtonActionPerformed(evt);
            }
        });
        petriNetsFrameToolBar.add(newTransitionButton);

        newTieButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newTieButton.setText("Tie");
        newTieButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10));
        newTieButton.setFocusable(false);
        newTieButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newTieButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newTieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTieButtonActionPerformed(evt);
            }
        });
        petriNetsFrameToolBar.add(newTieButton);

        petriNetsFrameSplitPane.setDividerSize(3);
        petriNetsFrameSplitPane.setToolTipText("Результати обчислення статистики");
        petriNetsFrameSplitPane.setAutoscrolls(true);
        petriNetsFrameSplitPane.setMinimumSize(new java.awt.Dimension(405, 202));

        petriNetPanelScrollPane.setBackground(new java.awt.Color(255, 255, 255));
        petriNetPanelScrollPane.setBorder(new javax.swing.border.MatteBorder(null));
        petriNetPanelScrollPane.setForeground(new java.awt.Color(255, 255, 255));
        petriNetPanelScrollPane.setAutoscrolls(true);
        petriNetPanelScrollPane.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        petriNetPanelScrollPane.setMinimumSize(new java.awt.Dimension(200, 200));
        petriNetPanelScrollPane.setPreferredSize(new java.awt.Dimension(1, 1));
        petriNetPanelScrollPane.setWheelScrollingEnabled(false);
        petriNetsFrameSplitPane.setLeftComponent(petriNetPanelScrollPane);
        petriNetPanelScrollPane.getAccessibleContext().setAccessibleDescription("");

        modelingResultsPanel.setBackground(new java.awt.Color(229, 229, 229));
        modelingResultsPanel.setBorder(new javax.swing.border.MatteBorder(null));
        modelingResultsPanel.setForeground(new java.awt.Color(255, 255, 255));
        modelingResultsPanel.setAutoscrolls(true);
        modelingResultsPanel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        modelingResultsPanel.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        modelingResultsPanel.setRequestFocusEnabled(false);

        modelingResultsSplitPane.setDividerSize(1);
        modelingResultsSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        protokolScrollPane.setAutoscrolls(true);

        protokolTextArea.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        protokolTextArea.setText("-------------- Events protokol ---------------");
        protokolTextArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        protokolTextArea.setMinimumSize(new java.awt.Dimension(100, 100));
        protokolScrollPane.setViewportView(protokolTextArea);

        modelingResultsSplitPane.setLeftComponent(protokolScrollPane);

        statisticsTextArea.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        statisticsTextArea.setText("--------------- STATISTICS ----------------");
        statisticsTextArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        statisticsTextArea.setName(""); // NOI18N
        statisticsScrollPane.setViewportView(statisticsTextArea);
        statisticsTextArea.getAccessibleContext().setAccessibleName("");

        modelingResultsSplitPane.setRightComponent(statisticsScrollPane);

        modelingParametersPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        netNameLabel.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        netNameLabel.setText("Net name");
        netNameLabel.setMinimumSize(new java.awt.Dimension(0, 0));

        netNameTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        netNameTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        netNameTextField.setText("Untitled");
        netNameTextField.setCaretPosition(1);
        netNameTextField.setMinimumSize(new java.awt.Dimension(0, 0));
        netNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                netNameTextFieldActionPerformed(evt);
            }
        });

        timeStartLabel.setBackground(new java.awt.Color(192, 192, 192));
        timeStartLabel.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        timeStartLabel.setText("Time start");

        timeStartField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        timeStartField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        timeStartField.setText("0");
        timeStartField.setMinimumSize(new java.awt.Dimension(0, 0));
        timeStartField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeStartFieldActionPerformed(evt);
            }
        });

        timeModelingLabel.setBackground(new java.awt.Color(247, 247, 247));
        timeModelingLabel.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        timeModelingLabel.setText("Time modeling");

        timeModelingTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        timeModelingTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        timeModelingTextField.setText("1000");
        timeModelingTextField.setCaretPosition(1);
        timeModelingTextField.setMinimumSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout modelingParametersPanelLayout = new javax.swing.GroupLayout(modelingParametersPanel);
        modelingParametersPanel.setLayout(modelingParametersPanelLayout);
        modelingParametersPanelLayout.setHorizontalGroup(
            modelingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modelingParametersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(netNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(netNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(timeStartLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeStartField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(timeModelingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeModelingTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        modelingParametersPanelLayout.setVerticalGroup(
            modelingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modelingParametersPanelLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(modelingParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(netNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeStartLabel)
                    .addComponent(timeStartField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timeModelingLabel)
                    .addComponent(timeModelingTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(netNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        timeStartLabel.getAccessibleContext().setAccessibleName("Time");

        javax.swing.GroupLayout modelingResultsPanelLayout = new javax.swing.GroupLayout(modelingResultsPanel);
        modelingResultsPanel.setLayout(modelingResultsPanelLayout);
        modelingResultsPanelLayout.setHorizontalGroup(
            modelingResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modelingResultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modelingResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modelingResultsPanelLayout.createSequentialGroup()
                        .addComponent(modelingResultsSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(modelingParametersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        modelingResultsPanelLayout.setVerticalGroup(
            modelingResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modelingResultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(modelingParametersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modelingResultsSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addContainerGap())
        );

        petriNetsFrameSplitPane.setRightComponent(modelingResultsPanel);

        javax.swing.GroupLayout petriNetDesignLayout = new javax.swing.GroupLayout(petriNetDesign);
        petriNetDesign.setLayout(petriNetDesignLayout);
        petriNetDesignLayout.setHorizontalGroup(
            petriNetDesignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(petriNetDesignLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(petriNetDesignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(petriNetsFrameSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
                    .addComponent(petriNetsFrameToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        petriNetDesignLayout.setVerticalGroup(
            petriNetDesignLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(petriNetDesignLayout.createSequentialGroup()
                .addComponent(petriNetsFrameToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(petriNetsFrameSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );

        petriNetsFrameToolBar.getAccessibleContext().setAccessibleName("");
        petriNetsFrameToolBar.getAccessibleContext().setAccessibleDescription("");

        jTabbedPane1.addTab("Net designer", petriNetDesign);

        petriNetsFrameToolBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        petriNetsFrameToolBar1.setRollover(true);
        petriNetsFrameToolBar1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        petriNetsFrameToolBar1.setMargin(new java.awt.Insets(0, 10, 0, 10));

        newPlaceButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newPlaceButton1.setText("Petri-object");
        newPlaceButton1.setToolTipText("");
        newPlaceButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10));
        newPlaceButton1.setFocusable(false);
        newPlaceButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newPlaceButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newPlaceButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPlaceButton1ActionPerformed(evt);
            }
        });
        petriNetsFrameToolBar1.add(newPlaceButton1);

        newTransitionButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newTransitionButton1.setText("Petri-object class");
        newTransitionButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10));
        newTransitionButton1.setFocusable(false);
        newTransitionButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newTransitionButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newTransitionButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTransitionButton1ActionPerformed(evt);
            }
        });
        petriNetsFrameToolBar1.add(newTransitionButton1);

        newTieButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newTieButton1.setText("Tie");
        newTieButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10));
        newTieButton1.setFocusable(false);
        newTieButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newTieButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newTieButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTieButton1ActionPerformed(evt);
            }
        });
        petriNetsFrameToolBar1.add(newTieButton1);

        runPetriNetButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        runPetriNetButton1.setText("Run model");
        runPetriNetButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10));
        runPetriNetButton1.setFocusable(false);
        runPetriNetButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        runPetriNetButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        runPetriNetButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runPetriNetButton1ActionPerformed(evt);
            }
        });
        petriNetsFrameToolBar1.add(runPetriNetButton1);

        runEventButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        runEventButton1.setText("Run event");
        runEventButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10));
        runEventButton1.setFocusable(false);
        runEventButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        runEventButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        runEventButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runEventButton1ActionPerformed(evt);
            }
        });
        petriNetsFrameToolBar1.add(runEventButton1);

        petriNetsFrameSplitPane1.setDividerSize(3);
        petriNetsFrameSplitPane1.setToolTipText("Результати обчислення статистики");
        petriNetsFrameSplitPane1.setAutoscrolls(true);
        petriNetsFrameSplitPane1.setMinimumSize(new java.awt.Dimension(405, 202));

        petriNetPanelScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        petriNetPanelScrollPane1.setBorder(new javax.swing.border.MatteBorder(null));
        petriNetPanelScrollPane1.setForeground(new java.awt.Color(255, 255, 255));
        petriNetPanelScrollPane1.setAutoscrolls(true);
        petriNetPanelScrollPane1.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        petriNetPanelScrollPane1.setMinimumSize(new java.awt.Dimension(200, 200));
        petriNetPanelScrollPane1.setPreferredSize(new java.awt.Dimension(1, 1));
        petriNetPanelScrollPane1.setWheelScrollingEnabled(false);
        petriNetsFrameSplitPane1.setLeftComponent(petriNetPanelScrollPane1);

        modelingResultsPanel1.setBackground(new java.awt.Color(229, 229, 229));
        modelingResultsPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        modelingResultsPanel1.setForeground(new java.awt.Color(255, 255, 255));
        modelingResultsPanel1.setAutoscrolls(true);
        modelingResultsPanel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        modelingResultsPanel1.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        modelingResultsPanel1.setRequestFocusEnabled(false);

        modelingResultsSplitPane1.setDividerSize(1);
        modelingResultsSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        protokolScrollPane1.setAutoscrolls(true);

        protokolTextArea1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        protokolTextArea1.setText("-------------- Events protokol ---------------");
        protokolTextArea1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        protokolTextArea1.setMinimumSize(new java.awt.Dimension(100, 100));
        protokolScrollPane1.setViewportView(protokolTextArea1);

        modelingResultsSplitPane1.setLeftComponent(protokolScrollPane1);

        statisticsTextArea1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        statisticsTextArea1.setText("--------------- STATISTICS ----------------");
        statisticsTextArea1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        statisticsTextArea1.setName(""); // NOI18N
        statisticsScrollPane1.setViewportView(statisticsTextArea1);

        modelingResultsSplitPane1.setRightComponent(statisticsScrollPane1);

        modelingParametersPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        netNameLabel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        netNameLabel1.setText("Model name");
        netNameLabel1.setMinimumSize(new java.awt.Dimension(0, 0));

        netNameTextField1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        netNameTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        netNameTextField1.setText("Untitled");
        netNameTextField1.setCaretPosition(1);
        netNameTextField1.setMinimumSize(new java.awt.Dimension(0, 0));
        netNameTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                netNameTextField1ActionPerformed(evt);
            }
        });

        timeStartLabel1.setBackground(new java.awt.Color(192, 192, 192));
        timeStartLabel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        timeStartLabel1.setText("Time start");

        timeStartField1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        timeStartField1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        timeStartField1.setText("0");
        timeStartField1.setMinimumSize(new java.awt.Dimension(0, 0));
        timeStartField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeStartField1ActionPerformed(evt);
            }
        });

        timeModelingLabel1.setBackground(new java.awt.Color(247, 247, 247));
        timeModelingLabel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        timeModelingLabel1.setText("Time modeling");

        timeModelingTextField1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        timeModelingTextField1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        timeModelingTextField1.setText("1000");
        timeModelingTextField1.setCaretPosition(1);
        timeModelingTextField1.setMinimumSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout modelingParametersPanel1Layout = new javax.swing.GroupLayout(modelingParametersPanel1);
        modelingParametersPanel1.setLayout(modelingParametersPanel1Layout);
        modelingParametersPanel1Layout.setHorizontalGroup(
            modelingParametersPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modelingParametersPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(netNameLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(netNameTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(timeStartLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeStartField1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(timeModelingLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeModelingTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .addContainerGap())
        );
        modelingParametersPanel1Layout.setVerticalGroup(
            modelingParametersPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modelingParametersPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(modelingParametersPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(netNameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeStartLabel1)
                    .addComponent(timeStartField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timeModelingLabel1)
                    .addComponent(timeModelingTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(netNameTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout modelingResultsPanel1Layout = new javax.swing.GroupLayout(modelingResultsPanel1);
        modelingResultsPanel1.setLayout(modelingResultsPanel1Layout);
        modelingResultsPanel1Layout.setHorizontalGroup(
            modelingResultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modelingResultsPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(modelingResultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(modelingResultsSplitPane1)
                    .addComponent(modelingParametersPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1))
        );
        modelingResultsPanel1Layout.setVerticalGroup(
            modelingResultsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modelingResultsPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(modelingParametersPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modelingResultsSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );

        petriNetsFrameSplitPane1.setRightComponent(modelingResultsPanel1);

        javax.swing.GroupLayout petriNetDesign1Layout = new javax.swing.GroupLayout(petriNetDesign1);
        petriNetDesign1.setLayout(petriNetDesign1Layout);
        petriNetDesign1Layout.setHorizontalGroup(
            petriNetDesign1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(petriNetDesign1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(petriNetDesign1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(petriNetsFrameSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
                    .addComponent(petriNetsFrameToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        petriNetDesign1Layout.setVerticalGroup(
            petriNetDesign1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(petriNetDesign1Layout.createSequentialGroup()
                .addComponent(petriNetsFrameToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(petriNetsFrameSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );

        jTabbedPane1.addTab("Model designer", petriNetDesign1);

        petriNetsFrameToolBar2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        petriNetsFrameToolBar2.setRollover(true);
        petriNetsFrameToolBar2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        petriNetsFrameToolBar2.setMargin(new java.awt.Insets(0, 10, 0, 10));

        newPlaceButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newPlaceButton2.setText("Petri-object");
        newPlaceButton2.setToolTipText("");
        newPlaceButton2.setFocusable(false);
        newPlaceButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newPlaceButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newPlaceButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPlaceButton2ActionPerformed(evt);
            }
        });
        petriNetsFrameToolBar2.add(newPlaceButton2);

        newTransitionButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newTransitionButton2.setText("Petri-object class");
        newTransitionButton2.setFocusable(false);
        newTransitionButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newTransitionButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newTransitionButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTransitionButton2ActionPerformed(evt);
            }
        });
        petriNetsFrameToolBar2.add(newTransitionButton2);

        newTieButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newTieButton2.setText("Tie");
        newTieButton2.setFocusable(false);
        newTieButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newTieButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newTieButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTieButton2ActionPerformed(evt);
            }
        });
        petriNetsFrameToolBar2.add(newTieButton2);

        runPetriNetButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        runPetriNetButton2.setText("Run model");
        runPetriNetButton2.setFocusable(false);
        runPetriNetButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        runPetriNetButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        runPetriNetButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runPetriNetButton2ActionPerformed(evt);
            }
        });
        petriNetsFrameToolBar2.add(runPetriNetButton2);

        runEventButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        runEventButton2.setText("Run event");
        runEventButton2.setFocusable(false);
        runEventButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        runEventButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        runEventButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runEventButton2ActionPerformed(evt);
            }
        });
        petriNetsFrameToolBar2.add(runEventButton2);

        petriNetsFrameSplitPane2.setDividerSize(3);
        petriNetsFrameSplitPane2.setToolTipText("Результати обчислення статистики");
        petriNetsFrameSplitPane2.setAutoscrolls(true);
        petriNetsFrameSplitPane2.setMinimumSize(new java.awt.Dimension(405, 202));

        petriNetPanelScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        petriNetPanelScrollPane2.setBorder(new javax.swing.border.MatteBorder(null));
        petriNetPanelScrollPane2.setForeground(new java.awt.Color(255, 255, 255));
        petriNetPanelScrollPane2.setAutoscrolls(true);
        petriNetPanelScrollPane2.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        petriNetPanelScrollPane2.setMinimumSize(new java.awt.Dimension(200, 200));
        petriNetPanelScrollPane2.setPreferredSize(new java.awt.Dimension(1, 1));
        petriNetPanelScrollPane2.setWheelScrollingEnabled(false);
        petriNetsFrameSplitPane2.setLeftComponent(petriNetPanelScrollPane2);

        modelingResultsPanel2.setBackground(new java.awt.Color(229, 229, 229));
        modelingResultsPanel2.setBorder(new javax.swing.border.MatteBorder(null));
        modelingResultsPanel2.setForeground(new java.awt.Color(255, 255, 255));
        modelingResultsPanel2.setAutoscrolls(true);
        modelingResultsPanel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        modelingResultsPanel2.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        modelingResultsPanel2.setRequestFocusEnabled(false);

        modelingResultsSplitPane2.setDividerSize(1);
        modelingResultsSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        protokolScrollPane2.setAutoscrolls(true);

        protokolTextArea2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        protokolTextArea2.setText("-------------- Events protokol ---------------");
        protokolTextArea2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        protokolTextArea2.setMinimumSize(new java.awt.Dimension(100, 100));
        protokolScrollPane2.setViewportView(protokolTextArea2);

        modelingResultsSplitPane2.setLeftComponent(protokolScrollPane2);

        statisticsTextArea2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        statisticsTextArea2.setText("--------------- STATISTICS ----------------");
        statisticsTextArea2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        statisticsTextArea2.setName(""); // NOI18N
        statisticsScrollPane2.setViewportView(statisticsTextArea2);

        modelingResultsSplitPane2.setRightComponent(statisticsScrollPane2);

        modelingParametersPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        netNameLabel2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        netNameLabel2.setText("Model name");
        netNameLabel2.setMinimumSize(new java.awt.Dimension(0, 0));

        netNameTextField2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        netNameTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        netNameTextField2.setText("Untitled");
        netNameTextField2.setCaretPosition(1);
        netNameTextField2.setMinimumSize(new java.awt.Dimension(0, 0));
        netNameTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                netNameTextField2ActionPerformed(evt);
            }
        });

        timeStartLabel2.setBackground(new java.awt.Color(192, 192, 192));
        timeStartLabel2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        timeStartLabel2.setText("Time start");

        timeStartField2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        timeStartField2.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        timeStartField2.setText("0");
        timeStartField2.setMinimumSize(new java.awt.Dimension(0, 0));
        timeStartField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeStartField2ActionPerformed(evt);
            }
        });

        timeModelingLabel2.setBackground(new java.awt.Color(247, 247, 247));
        timeModelingLabel2.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        timeModelingLabel2.setText("Time modeling");

        timeModelingTextField2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        timeModelingTextField2.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        timeModelingTextField2.setText("1000");
        timeModelingTextField2.setCaretPosition(1);
        timeModelingTextField2.setMinimumSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout modelingParametersPanel2Layout = new javax.swing.GroupLayout(modelingParametersPanel2);
        modelingParametersPanel2.setLayout(modelingParametersPanel2Layout);
        modelingParametersPanel2Layout.setHorizontalGroup(
            modelingParametersPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modelingParametersPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(netNameLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(netNameTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(timeStartLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeStartField2, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(timeModelingLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeModelingTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );
        modelingParametersPanel2Layout.setVerticalGroup(
            modelingParametersPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modelingParametersPanel2Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(modelingParametersPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(netNameLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeStartLabel2)
                    .addComponent(timeStartField2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timeModelingLabel2)
                    .addComponent(timeModelingTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(netNameTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout modelingResultsPanel2Layout = new javax.swing.GroupLayout(modelingResultsPanel2);
        modelingResultsPanel2.setLayout(modelingResultsPanel2Layout);
        modelingResultsPanel2Layout.setHorizontalGroup(
            modelingResultsPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modelingResultsPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modelingResultsPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(modelingResultsSplitPane2)
                    .addComponent(modelingParametersPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        modelingResultsPanel2Layout.setVerticalGroup(
            modelingResultsPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modelingResultsPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(modelingParametersPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modelingResultsSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addContainerGap())
        );

        petriNetsFrameSplitPane2.setRightComponent(modelingResultsPanel2);

        javax.swing.GroupLayout petriNetDesign2Layout = new javax.swing.GroupLayout(petriNetDesign2);
        petriNetDesign2.setLayout(petriNetDesign2Layout);
        petriNetDesign2Layout.setHorizontalGroup(
            petriNetDesign2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(petriNetDesign2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(petriNetDesign2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(petriNetsFrameSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
                    .addComponent(petriNetsFrameToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        petriNetDesign2Layout.setVerticalGroup(
            petriNetDesign2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(petriNetDesign2Layout.createSequentialGroup()
                .addComponent(petriNetsFrameToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(petriNetsFrameSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(petriNetDesign2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(petriNetDesign2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Experiment designer", jPanel1);

        petriNetsFrameMenuBar.setBackground(new java.awt.Color(186, 213, 241));
        petriNetsFrameMenuBar.setForeground(new java.awt.Color(98, 147, 167));

        fileMenu.setText("File");
        fileMenu.setMargin(new java.awt.Insets(0, 10, 0, 10));

        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        newMenuItem.setText("New");
        newMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newMenuItem);

        petriNetsFrameMenuBar.add(fileMenu);

        editMenu.setText("Edit");
        editMenu.setMargin(new java.awt.Insets(0, 10, 0, 10));

        editNetParameters.setText("Edit net parameters");
        editNetParameters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editNetParametersActionPerformed(evt);
            }
        });
        editMenu.add(editNetParameters);

        petriNetsFrameMenuBar.add(editMenu);

        Save.setText("Save");
        Save.setMargin(new java.awt.Insets(0, 10, 0, 10));

        SaveGraphNet.setText("Save Graph net");
        SaveGraphNet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveGraphNetActionPerformed(evt);
            }
        });
        Save.add(SaveGraphNet);

        jMenuItem2.setText("Save Graph net as");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        Save.add(jMenuItem2);

        SavePetriNetAs.setText("Save  Petri net as");
        SavePetriNetAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavePetriNetAsActionPerformed(evt);
            }
        });
        Save.add(SavePetriNetAs);

        SaveNetAsMethod.setText("Save net as method");
        SaveNetAsMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveNetAsMethodActionPerformed(evt);
            }
        });
        Save.add(SaveNetAsMethod);

        SaveMethodInNetLibrary.setText("Save method in NetLibrary");
        SaveMethodInNetLibrary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveMethodInNetLibraryActionPerformed(evt);
            }
        });
        Save.add(SaveMethodInNetLibrary);

        petriNetsFrameMenuBar.add(Save);

        jMenu1.setText("Run");
        jMenu1.setMargin(new java.awt.Insets(0, 10, 0, 10));

        itemRunNet.setText("Run Petri net");
        itemRunNet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemRunNetActionPerformed(evt);
            }
        });
        jMenu1.add(itemRunNet);

        itemRunEvent.setText("Run event");
        itemRunEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemRunEventActionPerformed(evt);
            }
        });
        jMenu1.add(itemRunEvent);

        petriNetsFrameMenuBar.add(jMenu1);

        setJMenuBar(petriNetsFrameMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Net designer");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        try {
            fileUse.newWorksheet(petriNetsPanel);
            timeStartField.setText(String.valueOf(0));
            
            netNameTextField.setText("Untitled");
            protokolTextArea.setText("---------Events protokol-----------");
            statisticsTextArea.setText("---------STATISTICS-----------");
            String pnetName = fileUse.openFile (petriNetsPanel, this);
            if (pnetName != null) {
                netNameTextField.setText(pnetName);
            }
        } catch (ExceptionInvalidNetStructure ex) {
            Logger.getLogger(PetriNetsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void newMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuItemActionPerformed
        fileUse.newWorksheet(petriNetsPanel);
        timeStartField.setText(String.valueOf(0));
        
        netNameTextField.setText("Untitled");
    }//GEN-LAST:event_newMenuItemActionPerformed

    private void SaveNetAsMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveNetAsMethodActionPerformed
        try {
            petriNetsPanel.getGraphNet().createPetriNet(netNameTextField.getText()); //added by Inna
            fileUse.saveNetAsMethod(petriNetsPanel.getGraphNet(), statisticsTextArea);
        } catch (ExceptionInvalidNetStructure ex) {
            Logger.getLogger(PetriNetsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
      
    }//GEN-LAST:event_SaveNetAsMethodActionPerformed

    private void SaveGraphNetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveGraphNetActionPerformed
         GraphPetriNet net = petriNetsPanel.getGraphNet();
                if (net != null) {
             try {
                 if (!fileUse.saveGraphNet(net, netNameTextField.getText().trim())) {
                     System.out.println("Graph net was not saved");
                 }
             } catch (ExceptionInvalidNetStructure ex) {
                 Logger.getLogger(PetriNetsFrame.class.getName()).log(Level.SEVERE, null, ex);
             }
                }
 
    }//GEN-LAST:event_SaveGraphNetActionPerformed

    private void SavePetriNetAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavePetriNetAsActionPerformed
        try {
            fileUse.savePetriNetAs(petriNetsPanel, this);
        } catch (ExceptionInvalidNetStructure ex) {
            Logger.getLogger(PetriNetsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SavePetriNetAsActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            fileUse.saveGraphNetAs(petriNetsPanel, this);
        } catch (ExceptionInvalidNetStructure ex) {
            Logger.getLogger(PetriNetsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void SaveMethodInNetLibraryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveMethodInNetLibraryActionPerformed
        fileUse.saveMethodInNetLibrary(petriNetsPanel, this, statisticsTextArea);
    }//GEN-LAST:event_SaveMethodInNetLibraryActionPerformed

    private void editNetParametersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editNetParametersActionPerformed
        try {
            GraphReUseFrame reUseFrame = new GraphReUseFrame();
            reUseFrame.setVisible(true);
        } catch (ExceptionInvalidNetStructure ex) {
            Logger.getLogger(PetriNetsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editNetParametersActionPerformed

    private void timeStartField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeStartField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeStartField1ActionPerformed

    private void netNameTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_netNameTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_netNameTextField1ActionPerformed

    private void runEventButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runEventButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_runEventButton1ActionPerformed

    private void runPetriNetButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runPetriNetButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_runPetriNetButton1ActionPerformed

    private void newTieButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTieButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newTieButton1ActionPerformed

    private void newTransitionButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTransitionButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newTransitionButton1ActionPerformed

    private void newPlaceButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPlaceButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newPlaceButton1ActionPerformed

    private void timeStartFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeStartFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeStartFieldActionPerformed

    private void netNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_netNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_netNameTextFieldActionPerformed

    private void newTieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTieButtonActionPerformed

        petriNetsPanel.setIsSettingTie(true);
    }//GEN-LAST:event_newTieButtonActionPerformed

    private void newTransitionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTransitionButtonActionPerformed
        //  GraphPetriTransition pt = new GraphPetriTransition(new PetriT(PetriNetsPanel.getPetriTName(), 0.0, Double.MAX_VALUE), PetriNetsPanel.getIdTransition()); //corrected by Inna 28.11.2012
        GraphPetriTransition pt = new GraphPetriTransition(
            new PetriT(GraphPetriTransition.setSimpleName(), 0.0), PetriNetsPanel.getIdTransition());//  by Inna 18.01.2013
        petriNetsPanel.getGraphNet().getGraphPetriTransitionList().add(pt);
        petriNetsPanel.setCurrent(pt);
        // pt.getPetriTransition().printParameters();
    }//GEN-LAST:event_newTransitionButtonActionPerformed

    private void newPlaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPlaceButtonActionPerformed
        // GraphPetriPlace pp = new GraphPetriPlace(new PetriP(PetriNetsPanel.getPetriPName(), 0), PetriNetsPanel.getIdPosition());
        GraphPetriPlace pp = new GraphPetriPlace(
            new PetriP(GraphPetriPlace.setSimpleName(), 0), PetriNetsPanel.getIdPosition()); //  by Inna 18.01.2013
        petriNetsPanel.getGraphNet().getGraphPetriPlaceList().add(pp);
        petriNetsPanel.setCurrent(pp);
        // pp.getPetriPlace().printParameters();
        // System.out.println("after added place we have such graph net:");
        //  petriNetsPanel.getGraphNet().print();
    }//GEN-LAST:event_newPlaceButtonActionPerformed

    private void newPlaceButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPlaceButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newPlaceButton2ActionPerformed

    private void newTransitionButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTransitionButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newTransitionButton2ActionPerformed

    private void newTieButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTieButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newTieButton2ActionPerformed

    private void runPetriNetButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runPetriNetButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_runPetriNetButton2ActionPerformed

    private void runEventButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runEventButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_runEventButton2ActionPerformed

    private void netNameTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_netNameTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_netNameTextField2ActionPerformed

    private void timeStartField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeStartField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeStartField2ActionPerformed

    private void itemRunNetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemRunNetActionPerformed
        // Заупск вікна та зміна значаень маркерів у окремому потоці, оновлення значень через заданий інтервал часу
        // додано Богдан 21.02.2016
        Runnable runnable = () -> {
            protokolTextArea.setText("---------Events protokol-----------");
            protokolTextArea.setText("---------STATISTICS-----------");
            if (petriNetsPanel.getGraphNet() == null) {
                errorFrame.setErrorMessage(" Net on panel is null. Paint or read from file it.");
                errorFrame.setVisible(true);
                return;
            } else {
                if (petriNetsPanel.getGraphNet().isCorrectInTies() != true) {
                    errorFrame.setErrorMessage(" Transition has no input places.");
                    errorFrame.setVisible(true);
                } else {
                    if (petriNetsPanel.getGraphNet().isCorrectOutTies() != true) {
                        
                        errorFrame.setErrorMessage(" Transition has no output places.");
                        errorFrame.setVisible(true);
                    } else {
                        try {
                            //Додати можливість встановлювати ім"я і читати його з рядка
                            petriNetsPanel.getGraphNet().createPetriNet(netNameTextField.getText()); //створення мережі Петрі та запис її в GraphNet
                            //System.out.print("\n Net on panel before runing :");
                            //petriNetsPanel.getGraphNet().print(); //ДРУК інформації про створену мережу
                            
                            if (petriNetsPanel.getGraphNet().getPetriNet() == null) {
                                errorFrame.setErrorMessage(" Petri Net not exist yet. Paint or read from file it. ");
                                errorFrame.setVisible(true);
                                return;
                            } else {
                                double modelingTime = Double.parseDouble(timeModelingTextField.getText());
                                double currentTime = Double.valueOf(timeStartField.getText());
                                PetriSim petriSim = new PetriSim(petriNetsPanel.getGraphNet().getPetriNet(),
                                                                 new ModelingTimeState(currentTime, modelingTime));
                                                              
                                ArrayList<PetriSim> list = new ArrayList<PetriSim>();
                                list.add(petriSim);
                                PetriObjModel m = new PetriObjModel(list); //Петрі-об"єктна модель, що складається з одного Петріз-об"єкта
                                m.go(Double.valueOf(timeModelingTextField.getText()), protokolTextArea);
                                petriNetsPanel.getGraphNet().printStatistics(statisticsTextArea);
                                //перетворення у потрібний формат ...
//                                Double d = new Double(petriSim.getTimeCurr()); //added by Inna 3.06.2013
//                                Double dd = new Double(100.0*(petriSim.getTimeCurr()-d.intValue()));  //десяткова частина
//                                timeStartField.setText(String.valueOf(
//                                        d.intValue()+"."+dd.intValue()
//                                )); //added by Inna 3.06.2013
                                
                                petriNetsPanel.repaint(); //додано 19.11.2012, можливо не потрібно?
                            }
                        } catch (ExceptionInvalidNetStructure ex) {
                            Logger.getLogger(PetriNetsFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        };
        // added by Богдан 12.03.2016
        new Thread(runnable).start();
        new Thread(() -> {
            while (true) {
                petriNetsPanel.repaint();
                try {
                    TimeUnit.MILLISECONDS.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }).start();

    }//GEN-LAST:event_itemRunNetActionPerformed

    private void itemRunEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemRunEventActionPerformed
       if (petriNetsPanel.getGraphNet() == null) {
            errorFrame.setErrorMessage(" Net on panel is null. Paint or read from file it.");
            errorFrame.setVisible(true);
            return;
        } else {

           try {
               petriNetsPanel.getGraphNet().createPetriNet(netNameTextField.getText()); //створення мережі Петрі та запис її в GraphNet
               
               if (petriNetsPanel.getGraphNet().getPetriNet() == null) {
                   errorFrame.setErrorMessage(" Petri Net not exist yet. Paint or read from file it. ");
                   errorFrame.setVisible(true);
                   return;
               } else {
                    double modelingTime = Double.parseDouble(timeModelingTextField.getText());
                    double currentTime = Double.valueOf(timeStartField.getText());
                    PetriSim petriSim = new PetriSim(petriNetsPanel.getGraphNet().getPetriNet(),
                                                    new ModelingTimeState(currentTime, modelingTime));
                   
                   // System.out.println("in the begining we have such state of net places:");
                   petriSim.printMark(protokolTextArea);
                   petriSim.step(protokolTextArea);
                   //  System.out.println("at the result we have such state of net places:");
                   petriSim.printMark(protokolTextArea);
                   
//                   Double d = new Double(PetriSim.getTimeCurr()); //added by Inna 3.06.2013
//                   
//                   Double dd = new Double(100.0*(PetriSim.getTimeCurr()-d.intValue()));
//                   timeStartField.setText(String.valueOf(
//                           d.intValue()+"."+dd.intValue() //перетворення у цілий формат, але тоді здається що час дискретний....
//                   )); //added by Inna 3.06.2013
                   petriNetsPanel.repaint(); //додано 19.11.2012, можливо не потрібно?
               }
           } catch (ExceptionInvalidNetStructure ex) {
               Logger.getLogger(PetriNetsFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
        petriNetsPanel.getGraphNet().printStatistics(statisticsTextArea); // TODO add your handling code here:
    }//GEN-LAST:event_itemRunEventActionPerformed
    public String getNameNet(){
       return netNameTextField.getText();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PetriNetsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PetriNetsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PetriNetsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PetriNetsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
      // PetriNet net = NetLibrary.CreateNetResources_copy();
     //  System.out.println(net.getName()+"  "+net.getListP()[0].getMark());
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PetriNetsFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Save;
    private javax.swing.JMenuItem SaveGraphNet;
    private javax.swing.JMenuItem SaveMethodInNetLibrary;
    private javax.swing.JMenuItem SaveNetAsMethod;
    private javax.swing.JMenuItem SavePetriNetAs;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem editNetParameters;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem itemRunEvent;
    private javax.swing.JMenuItem itemRunNet;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel modelingParametersPanel;
    private javax.swing.JPanel modelingParametersPanel1;
    private javax.swing.JPanel modelingParametersPanel2;
    private javax.swing.JPanel modelingResultsPanel;
    private javax.swing.JPanel modelingResultsPanel1;
    private javax.swing.JPanel modelingResultsPanel2;
    private javax.swing.JSplitPane modelingResultsSplitPane;
    private javax.swing.JSplitPane modelingResultsSplitPane1;
    private javax.swing.JSplitPane modelingResultsSplitPane2;
    private javax.swing.JLabel netNameLabel;
    private javax.swing.JLabel netNameLabel1;
    private javax.swing.JLabel netNameLabel2;
    private javax.swing.JTextField netNameTextField;
    private javax.swing.JTextField netNameTextField1;
    private javax.swing.JTextField netNameTextField2;
    private javax.swing.JMenuItem newMenuItem;
    private javax.swing.JButton newPlaceButton;
    private javax.swing.JButton newPlaceButton1;
    private javax.swing.JButton newPlaceButton2;
    private javax.swing.JButton newTieButton;
    private javax.swing.JButton newTieButton1;
    private javax.swing.JButton newTieButton2;
    private javax.swing.JButton newTransitionButton;
    private javax.swing.JButton newTransitionButton1;
    private javax.swing.JButton newTransitionButton2;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JPanel petriNetDesign;
    private javax.swing.JPanel petriNetDesign1;
    private javax.swing.JPanel petriNetDesign2;
    private javax.swing.JScrollPane petriNetPanelScrollPane;
    private javax.swing.JScrollPane petriNetPanelScrollPane1;
    private javax.swing.JScrollPane petriNetPanelScrollPane2;
    private javax.swing.JMenuBar petriNetsFrameMenuBar;
    private javax.swing.JSplitPane petriNetsFrameSplitPane;
    private javax.swing.JSplitPane petriNetsFrameSplitPane1;
    private javax.swing.JSplitPane petriNetsFrameSplitPane2;
    private javax.swing.JToolBar petriNetsFrameToolBar;
    private javax.swing.JToolBar petriNetsFrameToolBar1;
    private javax.swing.JToolBar petriNetsFrameToolBar2;
    private javax.swing.JScrollPane protokolScrollPane;
    private javax.swing.JScrollPane protokolScrollPane1;
    private javax.swing.JScrollPane protokolScrollPane2;
    private javax.swing.JTextArea protokolTextArea;
    private javax.swing.JTextArea protokolTextArea1;
    private javax.swing.JTextArea protokolTextArea2;
    private javax.swing.JButton runEventButton1;
    private javax.swing.JButton runEventButton2;
    private javax.swing.JButton runPetriNetButton1;
    private javax.swing.JButton runPetriNetButton2;
    private javax.swing.JScrollPane statisticsScrollPane;
    private javax.swing.JScrollPane statisticsScrollPane1;
    private javax.swing.JScrollPane statisticsScrollPane2;
    private javax.swing.JTextArea statisticsTextArea;
    private javax.swing.JTextArea statisticsTextArea1;
    private javax.swing.JTextArea statisticsTextArea2;
    private javax.swing.JLabel timeModelingLabel;
    private javax.swing.JLabel timeModelingLabel1;
    private javax.swing.JLabel timeModelingLabel2;
    private javax.swing.JTextField timeModelingTextField;
    private javax.swing.JTextField timeModelingTextField1;
    private javax.swing.JTextField timeModelingTextField2;
    private javax.swing.JTextField timeStartField;
    private javax.swing.JTextField timeStartField1;
    private javax.swing.JTextField timeStartField2;
    private javax.swing.JLabel timeStartLabel;
    private javax.swing.JLabel timeStartLabel1;
    private javax.swing.JLabel timeStartLabel2;
    // End of variables declaration//GEN-END:variables
    private PetriNetsPanel petriNetsPanel;
    private FileUse fileUse = new FileUse();
    private ErrorFrame errorFrame = new ErrorFrame();
}
